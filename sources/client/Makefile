##############################################################################
#                                  2017 г.
##############################################################################
#
# Авторы: Ларюшин Александр Андреевич 
# 	  364961@mail.ru
#
# Кодировка - UTF-8
#
# Copyright (C) 2017 Ларюшин Александр Андреевич
#
#  Makefile - свободная программа: вы можете перераспространять ее и/или
# изменять ее на условиях Стандартной общественной лицензии GNU в том виде,
# в каком она была опубликована Фондом свободного программного обеспечения;
# либо версии 3 лицензии, либо любой более поздней
# версии.
#
#  Makefile распространяется в надежде, что она будет полезной,
# но БЕЗО ВСЯКИХ ГАРАНТИЙ; даже без неявной гарантии ТОВАРНОГО ВИДА
# или ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Подробнее см. в Стандартной
# общественной лицензии GNU.
# Вы должны были получить копию Стандартной общественной лицензии GNU
# вместе с этой программой. Если это не так, см.
# <http://www.gnu.org/licenses/>.
#
# Данный файл распространяется по лицензии GNU/GPL v.3 или более поздней.
#
# Makefile - сборка проекта
#
##############################################################################


# Компилятор и опции
gnuPrefix 	=
cxx		:= $(gnuPrefix)g++
gdbLevel	= 0
optLevel	= 0                     # Уровень оптимизации
includeDir	= ../include
subDir		= ../tree
cppFiles        := $(wildcard *.cpp)    # Все *.cpp файлы
cppFiles	+= $(foreach srcPath, $(subDir), $(wildcard $(srcPath)/*.cpp)) # Недостающие файлы
objFiles        := $(cppFiles:.cpp=.o)
cFlags          += -O$(optLevel) -c -g$(gdbLevel) -Wall # Флаги компиляции
# После отладки убрать этот флаг
cFlags          += $(patsubst %, -I %, $(subst :, , $(includeDir))) 
#cFlags		+= -DDEBUG
# Пути к библиотекам как опция линковщика
ldFlags         := $(patsubst %, -L %, $(subst :, , $(libsPath)))
# Имена библиотек как опция линковщика
ldFlags         += $(patsubst %, -l%, $(subst :, , $(libs)))
# Путь к поддиректории дерева

target 		= client
RM 		= rm -f
CP 		= cp
CLEAR		= clear
MV		= mv

# Компиляция

$(target): $(objFiles)
	$(cxx) -o $@ $^ $(ldFlags)

# Компиляция
$(objFiles): $(cppFiles) 
	@$(CLEAR)
	$(cxx) $(cFlags) $^
	@$(MV) ./tree.o $(subDir)/
	@$(MV) ./node.o $(subDir)/


.PHONY: clean
clean: 
	@$(foreach srcPath, $(subDir), $(RM) $(srcPath)/*.o)
	@$(RM) *.o $(target)

